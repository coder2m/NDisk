syntax = "proto3";

package NUserPb;

service NUserService {
  //  账号登录
  rpc AccountLogin(UserLoginRequest)returns(LoginResponse){}
  //  发送 短信
  rpc SMSSend(SendRequest)returns(NilResponse){}
  //  账号登录-验证码
  rpc SMSLogin(SMSLoginRequest)returns(LoginResponse){}
  //  注册
  rpc UserRegister(UserRegisterRequest)returns(NilResponse){}
  //  注册邮件验证发送邮件
  //  找回密码发送邮件验证
  rpc SendEmail(SendRequest)returns(NilResponse){}
  //  找回密码 邮件或者电话 都可
  rpc RetrievePassword(RetrievePasswordRequest)returns(NilResponse){}
  //  根据id获取用户信息
  rpc GetUserById(UserInfo)returns(UserInfo){}
  //  批量获取用户信息 分页
  rpc GetUserList(PageRequest)returns(UserListResponse){}
  //  修改用户状态
  rpc UpdateUserStatus(UserInfo)returns(NilResponse){}
  //  修改用户信息
  rpc UpdateUser(UserInfo)returns(NilResponse){}
  //  批量删除用户
  rpc DelUsers(UidList)returns(ChangeNumResponse){}
  //  批量恢复用户
  rpc RecoverDelUsers(UidList)returns(ChangeNumResponse){}
  //  批量添加用户
  rpc CreateUsers(UserList)returns(ChangeNumResponse){}
  //  用户校验
  rpc VerifyUsers(Token)returns(UserInfo){}
  //  刷新token
  rpc RefreshToken(Token)returns(Token){}
  //  更新邮箱状态
  rpc UpdateUserEmailStatus(UserInfo)returns(NilResponse){}
  //  验证Code
  rpc CheckCode(CheckCodeRequest)returns(NilResponse){}
  //  根据Uid批量获取用户列表
  rpc GetUserListByUid(UidList)returns(UserListResponse){}

  //	批量创建机构
  rpc CreateManyAgency(CreateManyAgencyReq)returns(ChangeNumResponse){}
  //	批量删除机构
  rpc DelManyAgency(IdList)returns(ChangeNumResponse){}
  //	机构列表
  rpc ListAgency(ListAgencyPageRequest)returns(ListAgencyPageResponse){}
  //	修改机构信息
  rpc UpdateAgency(AgencyInfo)returns(NilResponse){}
  // 根据id获取机构信息
  rpc GetAgencyById(AgencyInfo)returns(AgencyInfo){}
  // 根据id修改机构状态
  rpc UpdateAgencyStatus(AgencyInfo)returns(NilResponse){}
  //	恢复删除后的机构
  rpc RecoverDelAgency(IdList)returns(ChangeNumResponse){}
  // 获取指定用户创建的所有机构
  rpc ListAgencyByCreateUId(Id)returns(ListAgencyResponse){}
  //	获取用户加入的所有机构
  rpc ListAgencyByJoinUId(Id)returns(ListAgencyResponse){}
  // 获取机构下的所有用户
  rpc ListUserByJoinAgency(Id)returns(UserList){}
  // 修改关联表状态
  rpc UpdateStatusAgencyUser(Id)returns(NilResponse){}
  //	根据关联id批量退出机构
  rpc DelManyAgencyUser(IdList)returns(ChangeNumResponse){}
}

message CreateManyAgencyReq {
  uint32 uid = 1;
  repeated AgencyReq agency = 2;
}

message AgencyReq {
  uint32 parentId = 1;
  string name = 2;
  string remark = 3;
}

message ListAgencyPageRequest{
  PageRequest page = 1;
  uint32  parentId = 2;
}

message ListAgencyPageResponse {
  repeated AgencyInfo list = 1;
  uint32 count = 2;
}

message ListAgencyResponse {
  repeated AgencyInfo list = 1;
}

message AgencyInfo {
  uint32 auId = 1;
  uint32 id = 2;
  uint32 parentId = 3;
  string name = 4;
  string remark = 5;
  uint32 status = 6;
  UserInfo createUser = 7;
  uint64 created_at = 9;
  uint64 updated_at = 10;
  uint64 deleted_at = 11;
}

message ChangeNumResponse {
  uint32 count = 1;
}

message UserLoginRequest  {
  string account = 1;
  string password = 2;
}

message SMSLoginRequest{
  string tel = 1;
  string code = 2;
}

message UserInfo  {
  uint32 auId = 1;
  uint64 uid = 2;
  string name = 3;
  string alias = 4;
  string Tel = 5;
  string email = 6;
  uint32 status = 7;
  uint32 email_status = 8;
  string password = 9;
  uint64 created_at = 10;
  uint64 updated_at = 11;
  uint64 deleted_at = 12;
}

message Token  {
  string account_token = 1;
  string refresh_token = 2;
}

message LoginResponse  {
  UserInfo info = 1;
  Token token = 2;
}

message NilResponse{}

message UserRegisterRequest{
  UserInfo info = 1;
  string code = 2;
}

message SendRequest{
  string account = 1;
  //0为注册邮件验证发送邮件；1为找回密码发送邮件验证 2为登录 3为邮箱验证
  ActionType type = 2;
}

message CheckCodeRequest{
  string account = 1;
  string code = 2;
  //0为注册邮件验证发送邮件；1为找回密码发送邮件验证 2为登录 3为邮箱验证
  ActionType type = 3;
}

enum ActionType {
  Register_Type = 0;
  Retrieve_Type = 1;
  Login_Type = 2;
  EmailAttest_Type = 3;
}

message RetrievePasswordRequest{
  string account = 1;
  string password = 2;
  string code = 3;
}

message PageRequest{
  string keyword = 1;
  uint32 page = 2;
  uint32 limit = 3;
  bool is_delete = 4;
}

message UserListResponse {
  repeated UserInfo list = 1;
  uint32 count = 2;
}

message UidList{
  repeated uint32 uid = 1;
}

message IdList{
  repeated uint32 id = 1;
}

message Id{
  uint32 id = 1;
  uint32 status = 2;
}

message UserList{
  repeated UserInfo list = 1;
}